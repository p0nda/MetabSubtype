library(NMF)
library(stringr)
# library(eoffice)
library(dplyr)
library(ComplexHeatmap)
library(ggplot2)
# library(rJava)
# library(xlsx)
# library(RColorBrewer)
library(circlize)
library(umap)
library(Rtsne)
library(ggrepel)
library(ggplot2)
library(clusterProfiler)
library(KEGGREST)
# library(ConsensusClusterPlus)
library(viridis)
library(survminer)
library(survival)
getwd()
setwd("~/workstation/MetabSubtype/tasks/Subtype/notebooks/")
source('G:/repositories/MetabSubtype/tasks/MultiOmics/notebooks/utils.R')
##### Metab #####
LABEL_NUM=0
filepath.metab='~/workstation/MetabSubtype/tasks/Subtype/data/Using/metab.csv'
filepath.sample='~/workstation/MetabSubtype/tasks/Subtype/data/Using/sample.csv'
filepath.cluster_result='/home/suh/workstation/MetabSubtype/tasks/MultiOmics/data/metab/cluster_result.csv'
filepath.cluster_result='G:/repositories/MetabSubtype/tasks/MultiOmics/data/metab/cluster_result.csv'
filepath.metab='G:/repositories/MetabSubtype/tasks/Subtype/data/Using/metab.csv'
filepath.sample='G:/repositories/MetabSubtype/tasks/Subtype/data/Using/sample.csv'
df.cluster_result<-read.csv(filepath.cluster_result, header= TRUE, check.names=F,row.names=1)
df.metab<-read.csv(filepath.metab, header= TRUE, check.names=F,row.names=1)
df.sample<-read.csv(filepath.sample, header= TRUE, check.names=F)
df.metab[1:5,1:5]
dim(df.metab)
length(unique((df.metab[,1])))
unique(df.metab[,1])
df.metab[,1]
df.metab[df.metab=='']=NA
df.sample[df.sample=='']=NA
df.sample[df.sample=='Neg']=NA
# df.sample=df.sample[!is.na(df.sample['Sample Name']),c('Sample Name','主要分型','生存时间分组','MT2结构')]
df.sample=df.sample[!is.na(df.sample['Sample Name']),]
df.sample['Sample Name']
row.names(df.sample)=df.sample[['Sample Name']]
df.sample=df.sample[rownames(df.metab),]
df.sample[match('1520',rownames(df.sample)),'oss']=0
dim(df.metab)
metab_num=ncol(df.metab)
df.raw_metab=df.metab[,1:metab_num]
dim(df.sample)
dim(merge(df.metab,df.sample,by.x="row.names",by.y="Sample Name"))
# Normalize Data
df.raw_metab.log=log2(df.raw_metab)
df.raw_metab.scaled=df.raw_metab.log
raw_metab_mean=apply(df.raw_metab.log,1,mean)
raw_metab_std=apply(df.raw_metab.log,1,sd)
df.raw_metab.scaled=(df.raw_metab.scaled-raw_metab_mean)/raw_metab_std
df.raw_metab.scaled=as.data.frame(nneg(as.matrix(df.raw_metab.scaled),method='min'))
colnames(df.raw_metab.scaled)
dim(df.raw_metab.scaled)
df.name_map=read.csv("/home/suh/workstation/MetabSubtype/tasks/MultiOmics/data/kegg/kegg_name_map.csv", header= TRUE, check.names=F)
df.name_map=read.csv("G:/repositories/MetabSubtype/tasks/MultiOmics/data/kegg/kegg_name_map.csv", header= TRUE, check.names=F)
df.path.metab <- read.csv('G:/repositories/MetabSubtype/tasks/MultiOmics/data/kegg/kegg_hsa_pathway_map.csv', header = T)
df.path.metab=df.path.metab[1:3206,]
df.path.metab=df.path.metab[!(df.path.metab$pathway_name %in% c('Vitamin B6 metabolism - Homo sapiens (human)','Thiamine metabolism - Homo sapiens (human)','Terpenoid backbone biosynthesis - Homo sapiens (human)')),]
# df.path.metab[(df.path.metab$pathway_name %in% c('Vitamin B6 metabolism - Homo sapiens (human)','Thiamine metabolism - Homo sapiens (human)','Terpenoid backbone biosynthesis - Homo sapiens (human)')),]
df.path.metab$pathway_name=str_replace(df.path.metab$pathway_name,' - Homo sapiens \\(human\\)','')
dim(df.path.metab)
dim(df.name_map)
df.new=df.path.metab[df.path.metab$cpd_id %in% df.name_map$KEGG,]
df.new$query=NA
df.new$query=df.name_map$compound[match(df.new$cpd_id, df.name_map$KEGG)]
df.new[df.new=='']=NA
head(df.new)
df.new$pathway_id=as.character(df.new$pathway_id)
df.new$cpd_id=as.character(df.new$cpd_id)
df.new$query=as.character(df.new$query)
str(df.new)
for (col in colnames(df.cluster_result)){
df.cluster_result[col]=as.factor(df.cluster_result[[col]])
}
test_df=merge(df.raw_metab,df.cluster_result,by="row.names")
rownames(test_df)=test_df[,1]
test_df['kmeans_2_clusters']
ggplot(data=test_df,aes(x=kmeans_2_clusters,y=amp))+geom_boxplot()+geom_jitter()
pathway_name='Purine metabolism'
# Get Pathway CPDs
metabs.kegg.tca=df.new[df.new$pathway_name==pathway_name,'query']
metabs.kegg.tca
metabs.ms.tca=get_ms_metabs(metabs.kegg.tca)
metabs.ms.tca
metabs.ms.tca=metabs.ms.tca[metabs.ms.tca!='NA']
mat=as.matrix(df.pathway_fc[,'log2fc'])
##### Mean Aggregate #####
dirpath="~/workstation/MetabSubtype/tasks/MultiOmics/results/20240523_summary/Metab/Mean/"
# setwd(dirpath)
class_label='kmeans_2_clusters'
df.use_sample=df.sample
df.use=merge(df.raw_metab,df.cluster_result[,class_label,drop=FALSE],by="row.names")
row.names(df.use)=df.use[[1]]
df.use=df.use[,2:ncol(df.use)]
pathway_matrix=df.use %>% group_by(!!sym(class_label)) %>% summarise_all(mean)
dim(pathway_matrix)
colnames(pathway_matrix)
# Row Name Specified
df.pathway_fc=as.data.frame(pathway_matrix)
row.names(df.pathway_fc)=df.pathway_fc[[1]]
df.pathway_fc=df.pathway_fc[,2:ncol(df.pathway_fc)]
df.pathway_fc['fc',]=df.pathway_fc['2',]/df.pathway_fc['1',]
df.pathway_fc=t(df.pathway_fc)
df.pathway_fc=as.data.frame(df.pathway_fc)
df.pathway_fc
colnames(df.pathway_fc)
df.pathway_fc[['fc']]
df.pathway_fc['log2fc']=sapply(df.pathway_fc[['fc']],log2)
pvalue.mt2_pathway=pvalue_by_wilcox(df.use,metab_num,class_label)
pvalue.mt2_pathway
match(pvalue.mt2_pathway[['Metabolites']],rownames(df.pathway_fc))
df.pathway_fc$pvalue=pvalue.mt2_pathway[match(pvalue.mt2_pathway[['Metabolites']],rownames(df.pathway_fc)),'pvalue']
df.pathway_fc['kynurenine',]
pvalue_cutoff=1
use_row_ha=FALSE
col_split=TRUE
pathway_names=unique(kegg_table$Description)
dim(df.path.metab)
dim(df.name_map)
df.new=df.path.metab[df.path.metab$cpd_id %in% df.name_map$KEGG,]
df.new$query=NA
df.new$query=df.name_map$compound[match(df.new$cpd_id, df.name_map$KEGG)]
df.new[df.new=='']=NA
head(df.new)
# colnames(df.name_map)
colnames(df.sample)
# Relabel Codex
class_label="kmeans_2_clusters"
df.use_sample=df.cluster_result
df.use_sample=df.use_sample[!is.na(df.use_sample[class_label]),]
# df.use_sample=df.use_sample[df.use_sample[['CODEX主要亚型']] %in% c('A'),]
# type1='high'
# type2=setdiff(unique(df.use_sample[[class_label]]),type1)
df.use=merge(df.raw_metab,df.use_sample[,class_label,drop=FALSE],by="row.names")
row.names(df.use)=df.use[[1]]
df.use=df.use[,2:ncol(df.use)]
pvalue_cutoff=5e-2
fc_up_cutoff=1.2
fc_down_cutoff=1.2
df.test.results.mt2=kegg_before_process(df.use,metab_num,class_label,types=c('1','2'))
kegg_table=kegg_after_process(df.test.results.mt2,pvalue_cutoff,fc_up_cutoff,fc_down_cutoff)
kegg_table
# Draw Table
kegg_table_draw=kegg_table
unwanted_pathways=c('Glycerolipid metabolism','Butanoate metabolism','Lipoic acid metabolism','Arginine biosynthesis','Nitrogen metabolism')
kegg_table_draw=kegg_table_draw[!kegg_table_draw$Description %in% unwanted_pathways,]
names(kegg_table_draw)[names(kegg_table_draw) == "p.adjust"] <- "FDR"
pathway_names=unique(kegg_table_draw$Description)
kegg_table_draw[kegg_table_draw['FDR']<=5e-2,c('Description','pvalue','query')]
kegg_table_draw
# Figure using FDR as X
kegg_table_draw=kegg_table_draw[order(kegg_table_draw$pvalue,decreasing = TRUE),]
kegg_table_draw=kegg_table_draw[(nrow(kegg_table_draw)-10):nrow(kegg_table_draw),]
# dirpath='~/workstation/MetabSubtype/tasks/MultiOmics/results/20240504_singleomic/'
# write.csv(kegg_table,paste0(dirpath,'metab_pathway.csv',collapse = '/'))
kegg_table_draw$FDR
p=ggplot(kegg_table_draw, aes(-log10(FDR), Description)) +
geom_point(aes(fill = -log10(FDR), size = FoldEnrich), color = "black", shape = 21) +
scale_y_discrete(limits = kegg_table_draw[['Description']])+
scale_size(range = c(3, 15), breaks = c(seq(0,10,2))) +
# scale_color_gradient(low="blue",high = "red")+
scale_fill_viridis_c(option = "A", direction = -1, begin = 0.4, breaks = c(seq(1,3,0.5)))+
#  scale_fill_viridis_c(option = "A", direction = -1, begin = 0.4, breaks = c(0.2,0.5, 1, 1.5)) +
theme(plot.margin = margin(1, 1, 1, 1, "cm")) +
# coord_fixed(ratio = 0.4) +
labs(x = "-Log10(FDR)", y = "", title = "",
fill = "-Log10(FDR)", size = "Enrich Ratio") +
theme(axis.text.x = element_text(size = 20, face = "plain", colour = "black",angle = 45,hjust = 1),
axis.text.y = element_text(size = 18, face = "plain", colour = "black")) +
theme(legend.text = element_text(size = 10, face = "plain", colour = "black"),
legend.title = element_text(size = 10, face = "plain", colour = "black"),
legend.key.height = unit(0.3, "cm"), legend.key.width = unit(0.3, "cm"))
print(p)
pathway_name='Purine metabolism'
# Get Pathway CPDs
metabs.kegg.tca=df.new[df.new$pathway_name==pathway_name,'query']
metabs.kegg.tca
metabs.ms.tca=get_ms_metabs(metabs.kegg.tca)
metabs.ms.tca
metabs.ms.tca=metabs.ms.tca[metabs.ms.tca!='NA']
mat=as.matrix(df.pathway_fc[,'log2fc'])
mat=as.matrix(df.pathway_fc[metabs.ms.tca,'log2fc',drop=FALSE])
mat=mat[order(mat),,drop=FALSE]
bk=c(-1,0,1)
col_fun<-colorRamp2(
bk,
c("#1D91C0", "white", "#E31A1C"))
p=ComplexHeatmap::pheatmap(mat,
name = pathway_name,
cluster_cols = F,
cluster_rows = F,
cellheight = 25,
cellwidth = 40,
col = col_fun
# scale="col"
)
print(p)
pathway_name='Purine metabolism'
# Get Pathway CPDs
metabs.kegg.tca=df.new[df.new$pathway_name==pathway_name,'query']
metabs.kegg.tca
metabs.ms.tca=get_ms_metabs(metabs.kegg.tca)
metabs.ms.tca
metabs.ms.tca=metabs.ms.tca[metabs.ms.tca!='NA']
mat=as.matrix(df.pathway_fc[,'log2fc'])
mat=as.matrix(df.pathway_fc[metabs.ms.tca,'log2fc',drop=FALSE])
mat=mat[order(mat),,drop=FALSE]
bk=c(-1,0,1)
col_fun<-colorRamp2(
bk,
c("#1D91C0", "white", "#E31A1C"))
p=ComplexHeatmap::pheatmap(mat,
name = pathway_name,
cluster_cols = F,
cluster_rows = F,
cellheight = 25,
cellwidth = 40,
col = col_fun
# scale="col"
)
print(p)
pathway_name='Purine metabolism'
# Get Pathway CPDs
metabs.kegg.tca=df.new[df.new$pathway_name==pathway_name,'query']
metabs.kegg.tca
metabs.ms.tca=get_ms_metabs(metabs.kegg.tca)
metabs.ms.tca
metabs.ms.tca=metabs.ms.tca[metabs.ms.tca!='NA']
mat=as.matrix(df.pathway_fc[,'log2fc'])
mat=as.matrix(df.pathway_fc[metabs.ms.tca,'log2fc',drop=FALSE])
mat=mat[order(mat),,drop=FALSE]
bk=c(-1,0,1)
col_fun<-colorRamp2(
bk,
c("#1D91C0", "white", "#E31A1C"))
p=ComplexHeatmap::pheatmap(mat,
name = pathway_name,
cluster_cols = F,
cluster_rows = F,
cellheight = 25,
cellwidth = 40,
col = col_fun
# scale="col"
)
print(p)
kegg_table
kegg_table
pathway_name='Pyrimidine  metabolism'
# Get Pathway CPDs
metabs.kegg.tca=df.new[df.new$pathway_name==pathway_name,'query']
metabs.kegg.tca
metabs.ms.tca=get_ms_metabs(metabs.kegg.tca)
metabs.ms.tca
metabs.ms.tca=metabs.ms.tca[metabs.ms.tca!='NA']
mat=as.matrix(df.pathway_fc[,'log2fc'])
mat=as.matrix(df.pathway_fc[metabs.ms.tca,'log2fc',drop=FALSE])
mat=mat[order(mat),,drop=FALSE]
bk=c(-1,0,1)
col_fun<-colorRamp2(
bk,
c("#1D91C0", "white", "#E31A1C"))
p=ComplexHeatmap::pheatmap(mat,
name = pathway_name,
cluster_cols = F,
cluster_rows = F,
cellheight = 25,
cellwidth = 40,
col = col_fun
# scale="col"
)
print(p)
kegg_table
pathway_name='Pyrimidine metabolism'
# Get Pathway CPDs
metabs.kegg.tca=df.new[df.new$pathway_name==pathway_name,'query']
metabs.kegg.tca
metabs.ms.tca=get_ms_metabs(metabs.kegg.tca)
metabs.ms.tca
metabs.ms.tca=metabs.ms.tca[metabs.ms.tca!='NA']
mat=as.matrix(df.pathway_fc[,'log2fc'])
mat=as.matrix(df.pathway_fc[metabs.ms.tca,'log2fc',drop=FALSE])
mat=mat[order(mat),,drop=FALSE]
bk=c(-1,0,1)
col_fun<-colorRamp2(
bk,
c("#1D91C0", "white", "#E31A1C"))
p=ComplexHeatmap::pheatmap(mat,
name = pathway_name,
cluster_cols = F,
cluster_rows = F,
cellheight = 25,
cellwidth = 40,
col = col_fun
# scale="col"
)
print(p)
kegg_table
pathway_name='Pyrimidine metabolism'
# Get Pathway CPDs
metabs.kegg.tca=df.new[df.new$pathway_name==pathway_name,'query']
metabs.kegg.tca
metabs.ms.tca=get_ms_metabs(metabs.kegg.tca)
metabs.ms.tca
metabs.ms.tca=metabs.ms.tca[metabs.ms.tca!='NA']
mat=as.matrix(df.pathway_fc[,'log2fc'])
mat=as.matrix(df.pathway_fc[metabs.ms.tca,'log2fc',drop=FALSE])
mat=mat[order(mat),,drop=FALSE]
bk=c(-1,0,1)
col_fun<-colorRamp2(
bk,
c("#1D91C0", "white", "#E31A1C"))
p=ComplexHeatmap::pheatmap(mat,
name = pathway_name,
cluster_cols = F,
cluster_rows = F,
cellheight = 25,
cellwidth = 40,
col = col_fun
# scale="col"
)
print(p)
